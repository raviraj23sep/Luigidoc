swagger: "2.0"
info:
  description: "Luni Customer Api"
  version: "1.0.0"
  title: "Luni Api"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "raviraj23sep@yahoo.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/luni"
schemes:
- "https"
- "http"
consumes:
  - application/json
produces:
  - application/json
paths:
  /inOrder:
    post:
      tags:
      - "inOrder"
      summary: "Add a new Order"
      description: "Add a new Order"
      operationId: "addNewOrder"
      parameters:
      - in: "body"
        name: "body"
        description: "Add a new order for the user"
        required: true
        schema:
          $ref: "#/definitions/PlacedOrder"
      responses:    
        "200":
          description: successful operation
          schema:
              $ref: "#/definitions/InOrder"
        "404":
          description: Placed order not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'    
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - "pet"
      summary: "Update order details"
      description: ""
      operationId: "updateOrderDetails"
      parameters:
      - in: "body"
        name: "body"
        description: "Add or remove item from placed orders"
        required: true
        schema:
          $ref: "#/definitions/PlacedOrder"
      responses:    
        "200":
          description: successful operation
          schema:
              $ref: "#/definitions/PlacedOrder"
        "404":
          description: Could not find Customer with the providedID 
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Could not update 
          schema:
            $ref: '#/definitions/Error'     
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
definitions:
  InOrder:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      placedOrderId:
        type: "string"
      offerId:
        type: "string"
      offerDetails:
        type: "string"
      menuItemId:
        type: "string"
      menuItemDetail:
        type: "string" 
      quantity:
        type: "integer"
      itemPrice:
        type: "integer"
      price:
        type: "integer"  
      active:
        type: boolean
  PlacedOrder:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      restaurantId:
        type: "string"
      restaurantName:
        type: "string"  
      orderTime:
        type: "string"
        format: "date-time"
      estimatedDeliveryTime:
        type: "string"
        format: "date-time"  
      foodReady:
        type: "string"
        format: "date-time"
      actualDeliveryTime:
        type: "string"
        format: "date-time"
      deliveryAddress:
        type: "string"
      customerId:
        type: "integer"
        format: "int64"
      price:
        type: "number"
        format: "float"
      discount:
        type: "number"
        format: "float"
      final_price:
        type: "number"
        format: "float"
      active:
        type: boolean
      InOrderItems:
        type: array
        items:
          $ref: '#/definitions/InOrder' 
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      field:
        type: string      