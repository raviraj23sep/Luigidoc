swagger: "2.0"
info:
  description: "Luni Customer Api"
  version: "1.0.0"
  title: "Luni Api"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "raviraj23sep@yahoo.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/luni"
schemes:
- "https"
- "http"
consumes:
  - application/json
produces:
  - application/json
paths:
  /menu:
    post:
      tags:
      - "Menu"
      summary: "Add a new menu for the restaurent"
      description: ""
      operationId: "addMenu"
      parameters:
      - in: "body"
        name: "body"
        description: "Menu object that needs to added into the Restaurent"
        required: true
        schema:
          $ref: "#/definitions/Menu"
      responses:    
        "200":
          description: successful operation
          schema:
              $ref: "#/definitions/Menu"
        "404":
          description: Customer data not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'    
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - "pet"
      summary: "Update a new menu to the app"
      description: ""
      operationId: "updateMenu"
      parameters:
      - in: "body"
        name: "body"
        description: "Menu object that needs to be updated to the store"
        required: true
        schema:
          $ref: "#/definitions/Menu"
      responses:    
        "200":
          description: successful operation
          schema:
              $ref: "#/definitions/Menu"
        "404":
          description: Could not find Customer with the providedID 
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Could not update 
          schema:
            $ref: '#/definitions/Error'     
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Menu:
    type: object
    properties:
      id:
        type: "integer"
        format: "int64"
      itemName:
        type: "string"
      category:
        type: "string"
      description:
        type: "string"
      ingredients:
        type: "string"
      recipe:
        type: "boolean"
      price:
        type: "number"
        format: "float"
      relatedTags:
        type: "array"
        items:
          type: "string"
      active:
        type: boolean
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      field:
        type: string      